name: Build Flutter APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: List directory structure (debug)
      run: |
        echo "Current directory:"
        pwd
        echo "Directory contents:"
        ls -la
        echo "Looking for Flutter files:"
        find . -name "pubspec.yaml" -type f
        find . -name "android" -type d

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'

    - name: Check Flutter installation
      run: |
        flutter --version
        echo "Flutter SDK location: $FLUTTER_ROOT"

    - name: Navigate to correct directory and setup
      run: |
        # Find the correct Flutter project directory
        if [ -f "pubspec.yaml" ]; then
          echo "Flutter project found in root directory"
          PROJECT_DIR="."
        elif [ -f "Big-fan-voice-chat/pubspec.yaml" ]; then
          echo "Flutter project found in Big-fan-voice-chat directory"
          PROJECT_DIR="Big-fan-voice-chat"
        else
          echo "Searching for pubspec.yaml..."
          PROJECT_DIR=$(find . -name "pubspec.yaml" -type f | head -1 | xargs dirname)
          echo "Found Flutter project in: $PROJECT_DIR"
        fi
        
        cd "$PROJECT_DIR"
        echo "Working in directory: $(pwd)"
        
        # Create local.properties for Android
        mkdir -p android
        echo "flutter.sdk=$FLUTTER_ROOT" > android/local.properties
        echo "sdk.dir=$ANDROID_HOME" >> android/local.properties
        
        # Clean and get dependencies
        flutter clean
        flutter pub get
        
        # Analyze code (allow warnings)
        flutter analyze --no-fatal-warnings || echo "Analysis completed with warnings"
        
        # Build APK
        flutter build apk --debug --verbose
        
        # Show build output location
        echo "APK built successfully!"
        find . -name "*.apk" -type f

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: |
          **/build/app/outputs/flutter-apk/app-debug.apk
          Big-fan-voice-chat/build/app/outputs/flutter-apk/app-debug.apk
          build/app/outputs/flutter-apk/app-debug.apk
