name: Flutter CI - Build APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PUB_CACHE: ${{ runner.temp }}/pub-cache

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: 'stable'

      - name: Cache pub packages
        uses: actions/cache@v4
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter pub get

      - name: Quick fix: ensure minSdk >= 23 (non-fatal)
        run: |
          if [ -f "android/app/build.gradle" ]; then
            echo "Checking minSdk in android/app/build.gradle..."
            awk '{
              if ($0 ~ /minSdkVersion[[:space:]]+[0-9]+/) {
                match($0, /minSdkVersion[[:space:]]+([0-9]+)/, a)
                if (a[1] < 23) {
                  sub(/minSdkVersion[[:space:]]+[0-9]+/, "minSdkVersion 23")
                }
              }
              print
            }' android/app/build.gradle > android/app/build.gradle.ci
            mv android/app/build.gradle.ci android/app/build.gradle
          else
            echo "No android/app/build.gradle found â€” skipping minSdk fix."
          fi

      - name: Build APK
        run: flutter build apk --release --split-per-abi

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/*.apk
