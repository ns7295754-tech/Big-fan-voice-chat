name: Build Flutter APK

on:
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.4'
          channel: stable

      - name: Ensure Gradle wrapper
        run: |
          if [ ! -f android/gradlew ]; then
            echo "Restoring Gradle wrapper..."
            flutter create -t app temp_restore_dir
            cp -r temp_restore_dir/android/gradle android/gradle
            cp -r temp_restore_dir/android/gradlew android/gradlew
            chmod +x android/gradlew
            rm -rf temp_restore_dir
          fi
          chmod +x android/gradlew || true

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          flutter pub get

      - name: Setup keystore (if provided)
        if: ${{ secrets.ANDROID_KEYSTORE != '' }}
        run: |
          echo "Configuring keystore..."
          mkdir -p android/app
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > android/app/release-keystore.jks
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=release-keystore.jks" >> android/key.properties

      - name: Build Debug APK
        run: |
          echo "Building debug APK..."
          flutter build apk --debug --no-shrink --verbose

      - name: Build Release APK
        run: |
          echo "Building release APK..."
          flutter build apk --release --no-shrink --verbose || (echo "Release build failed" && exit 1)

      - name: List APKs
        run: |
          echo "APK files generated:"
          find build -type f -name "*.apk" -exec ls -lh {} \; || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: flutter-apks
          path: |
            build/app/outputs/flutter-apk/app-debug.apk
            build/app/outputs/flutter-apk/app-release.apk
            build/**/*.apk
