name: Build Flutter Release APK

on:
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'

      - name: Prepare Android project
        run: |
          mkdir -p android/app/src/main/kotlin/com/example/big_fan_voice_chat
          mkdir -p android/gradle/wrapper

          # âœ… gradle-wrapper.properties
          cat > android/gradle/wrapper/gradle-wrapper.properties << 'EOF'
          distributionBase=GRADLE_USER_HOME
          distributionPath=wrapper/dists
          zipStoreBase=GRADLE_USER_HOME
          zipStorePath=wrapper/dists
          distributionUrl=https://services.gradle.org/distributions/gradle-7.5-all.zip
          EOF

          # âœ… local.properties
          echo "flutter.sdk=$FLUTTER_ROOT" > android/local.properties
          echo "sdk.dir=$ANDROID_HOME" >> android/local.properties
          chmod +x android/gradlew

      - name: Decode keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/release-keystore.jks

      - name: Configure key.properties
        run: |
          echo "storePassword=Bigfun@2580" > android/key.properties
          echo "keyPassword=Bigfun@2580" >> android/key.properties
          echo "keyAlias=bigfun" >> android/key.properties
          echo "storeFile=release-keystore.jks" >> android/key.properties

      - name: Clean and get packages
        run: |
          flutter clean
          flutter pub get

      - name: Build APK (Release Signed)
        run: |
          echo "ðŸš€ Starting release APK build..."
          flutter build apk --release --verbose
          echo "âœ… Build completed. Checking for APK..."
          find . -name "*.apk" -type f -exec ls -lh {} \;

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: flutter-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          if-no-files-found: error
