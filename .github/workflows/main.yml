# .github/workflows/main.yml
name: Build and Deploy Flutter App

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        
    - name: Install Dependencies
      run: flutter pub get
      
    - name: Run Tests
      run: flutter test
      
    - name: Analyze Code
      run: flutter analyze
      
    - name: Check Formatting
      run: dart format --set-exit-if-changed .
      
    - name: Build APK (Debug)
      run: flutter build apk --debug
      
    - name: Build APK (Release)
      run: flutter build apk --release
      
    - name: Build App Bundle (Release)
      run: flutter build appbundle --release
      
    - name: Upload Debug APK
      uses: actions/upload-artifact@v3
      with:
        name: debug-apk
        path: build/app/outputs/flutter-apk/app-debug.apk
        
    - name: Upload Release APK
      uses: actions/upload-artifact@v3
      with:
        name: release-apk  
        path: build/app/outputs/flutter-apk/app-release.apk
        
    - name: Upload App Bundle
      uses: actions/upload-artifact@v3
      with:
        name: app-bundle
        path: build/app/outputs/bundle/release/app-release.aab

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download Release APK
      uses: actions/download-artifact@v3
      with:
        name: release-apk
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: app-release.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

---

# .github/workflows/android.yml  
name: Android Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  android:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java 11
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        cache: true
        
    - name: Create local.properties
      run: echo "flutter.sdk=$FLUTTER_ROOT" > android/local.properties
      
    - name: Get Flutter dependencies
      run: flutter pub get
      
    - name: Generate files with build_runner
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      continue-on-error: true
      
    - name: Analyze Flutter code
      run: flutter analyze --no-fatal-infos --no-fatal-warnings
      
    - name: Run Flutter tests
      run: flutter test
      continue-on-error: true
      
    - name: Build Android Debug APK
      run: |
        flutter build apk --debug --verbose
        
    - name: Build Android Release APK  
      run: |
        flutter build apk --release --verbose
        
    - name: Build Android App Bundle
      run: |
        flutter build appbundle --release --verbose
        
    - name: Upload Debug APK as artifact
      uses: actions/upload-artifact@v3
      with:
        name: android-debug-apk
        path: build/app/outputs/flutter-apk/app-debug.apk
        retention-days: 7
        
    - name: Upload Release APK as artifact
      uses: actions/upload-artifact@v3
      with:
        name: android-release-apk
        path: build/app/outputs/flutter-apk/app-release.apk
        retention-days: 30
        
    - name: Upload App Bundle as artifact
      uses: actions/upload-artifact@v3
      with:
        name: android-app-bundle
        path: build/app/outputs/bundle/release/app-release.aab
        retention-days: 30

---

# .github/workflows/ios.yml
name: iOS Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  ios:
    name: Build iOS App
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        architecture: x64
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Build iOS (No Code Sign)
      run: |
        flutter build ios --release --no-codesign
        
    - name: Create IPA
      run: |
        mkdir Payload
        cp -r build/ios/iphoneos/Runner.app Payload
        zip -r app.ipa Payload
        
    - name: Upload IPA as artifact
      uses: actions/upload-artifact@v3
      with:
        name: ios-app
        path: app.ipa
        retention-days: 30

---

# .github/workflows/release.yml
name: Create Release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'release-*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu' 
        java-version: '11'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Build Release APK
      run: flutter build apk --release
      
    - name: Build App Bundle
      run: flutter build appbundle --release
      
    - name: Get version from pubspec.yaml
      id: version
      run: |
        VERSION=$(grep '^version:' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ steps.version.outputs.VERSION }}
        tag_name: ${{ github.ref_name }}
        body: |
          ðŸš€ **BigFan Voice Chat v${{ steps.version.outputs.VERSION }}**
          
          ## ðŸ“± Download Links:
          - **APK**: Download `app-release.apk` for Android devices
          - **AAB**: For Google Play Store upload
          
          ## âœ¨ Features:
          - Real-time voice chat
          - Firebase authentication  
          - Room management
          - Modern UI design
          
          ## ðŸ”§ Installation:
          1. Download APK file
          2. Enable "Install from unknown sources" 
          3. Install the APK
          4. Enjoy chatting!
          
        files: |
          build/app/outputs/flutter-apk/app-release.apk
          build/app/outputs/bundle/release/app-release.aab
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

---

# .github/workflows/test.yml
name: Test Suite

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Verify formatting
      run: dart format --output=none --set-exit-if-changed .
      
    - name: Analyze project source
      run: flutter analyze --no-fatal-infos --no-fatal-warnings
      
    - name: Run widget tests
      run: flutter test --coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info
        fail_ci_if_error: false

---

# .github/workflows/security.yml  
name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1' # Weekly on Monday

jobs:
  security:
    name: Security Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Run dependency vulnerability scan
      run: |
        flutter pub deps
        dart pub audit
      continue-on-error: true
      
    - name: Run Dart security analysis
      uses: github/super-linter@v4
      env:
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_DART: true
        VALIDATE_YAML: true
        VALIDATE_JSON: true
